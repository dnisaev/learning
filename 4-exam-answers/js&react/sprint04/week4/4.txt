import React, { useEffect } from "react";
import { Provider, TypedUseSelectorHook, useDispatch, useSelector } from "react-redux";
import ReactDOM from "react-dom/client";
import { BrowserRouter, Route, Routes } from "react-router-dom";
import { ThunkAction, ThunkDispatch } from "redux-thunk";
import axios from "axios";
import { configureStore, combineReducers } from "@reduxjs/toolkit";

// Utils
console.log = () => {};

// Api
const instance = axios.create({
    baseURL: "xxx",
});

const api = {
    getUsers() {
        return instance.get("xxx");
    },
};

// Reducer
const initState = {
    isLoading: false,
    users: [] as any[],
};

type InitStateType = typeof initState;

const appReducer = (state: InitStateType = initState, action: ActionsType): InitStateType => {
    switch (action.type) {
        case "APP/SET-USERS":
            /* 1 */
            debugger
            console.log('1')
            return { ...state, users: action.users };
        case "APP/IS-LOADING":
            /* 2 */
            debugger
            console.log('2')
            return { ...state, isLoading: action.isLoading };
        default:
            return state;
    }
};

// Actions
const setUsersAC = (users: any[]) => ({ type: "APP/SET-USERS", users }) as const;
const setLoadingAC = (isLoading: boolean) => ({ type: "APP/IS-LOADING", isLoading }) as const;
type ActionsType = ReturnType<typeof setUsersAC> | ReturnType<typeof setLoadingAC>;

// Thunk
const getUsersTC = (): AppThunk => (dispatch) => {
    /* 3 */
    console.log('3')
    debugger
    dispatch(setLoadingAC(true));
    api.getUsers().then((res) => {
        /* 4 */
        console.log('4')
        debugger
        dispatch(setLoadingAC(false));
        /* 5 */
        console.log('5')
        debugger
        dispatch(setUsersAC(res.data.data));
    });
};

// Store
const rootReducer = combineReducers({
    app: appReducer,
});

const store = configureStore({ reducer: rootReducer });
type RootState = ReturnType<typeof store.getState>;
type AppDispatch = ThunkDispatch<RootState, unknown, ActionsType>;
type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, ActionsType>;
const useAppDispatch = () => useDispatch<AppDispatch>();
const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;

// Loader
export const Loader = () => {
    /* 6 */
    debugger
    console.log('6')
    return <h1>Loading ...</h1>;
};

// Login
export const Login = () => {
    /* 7 */
    console.log('7')
    debugger
    const users = useAppSelector((state) => state.app.users);
    const isLoading = useAppSelector((state) => state.app.isLoading);

    return (
        <div>
            {isLoading && <Loader />}
            {users.map((u) => (
                <p key={u.id}>{u.email}</p>
            ))}
            <h1>
                –í –¥–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ –Ω—É–∂–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∑—è—Ç—å —Ä—É—á–∫—É, –ª–∏—Å—Ç–∏–∫ –∏
                –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ø–æ–∫–æ–π–Ω–æ —Ä–∞—Å—Å—Ç–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—ã –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ü—Ä–µ–∂–¥–µ —á–µ–º –¥–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç
                –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å—á–∏—Ç–∞–π—Ç–µ –∫-–≤–æ —Ü–∏—Ñ—Ä –∏ —Å–≤–µ—Ä—å—Ç–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π. –£–¥–∞—á–∏ üöÄ
            </h1>
        </div>
    );
};

// App
export const App = () => {
    /* 8 */
    console.log('8')
    debugger
    const dispatch = useAppDispatch();

    useEffect(() => {
        /* 9 */
        console.log('9')
        debugger
        dispatch(getUsersTC());
    }, []);

    /* 10 */
    console.log('10')
    debugger
    return (
        <Routes>
            <Route path={""} element={<Login />} />
        </Routes>
    );
};

const root = ReactDOM.createRoot(document.getElementById("root") as HTMLElement);
root.render(
    <Provider store={store}>
        <BrowserRouter>
            <App />
        </BrowserRouter>
    </Provider>,
);

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ó–∞–¥–∞—á–∞: –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–∑–æ–≤—É—Ç—Å—è —á–∏—Å–ª–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ.
// –ü–æ–¥—Å–∫–∞–∑–∫–∞: –±—É–¥–µ—Ç 13 —á–∏—Å–µ–ª.
// –û—Ç–≤–µ—Ç –¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

// üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: 1 2 3 4 5 6 7 8 9 10 1 2 3
// –ù–µ —É—Å–ø–µ–ª –æ—Ç–≤–µ—Ç–∏—Ç—å, –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç: 8 10 7 9 3 2 7 6 4 2 5 1 7